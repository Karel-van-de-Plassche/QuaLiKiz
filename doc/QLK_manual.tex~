\documentclass{article}
\usepackage{graphicx}

\begin{document}

\title{How to run QuaLiKiz}

\maketitle

\begin{abstract}
This little manual explains how to get QuaLiKiz scans running in a MATLAB environment on the Cephee cluster. The methodology of setting up a new run, and how to retrieve the output, are explained.
There is also the possibility of launching a run directly from CRONOS data, and the methodology of this option is explained. Any questions can be sent to Jonathan Citrin at J.Citrin@differ.nl, or Clarisse Bourdelle at Clarisse.Bourdelle@cea.fr
\end{abstract}

\section{Compiling the code}
Go to the src/ directory and type './makecephee.sh '. The QuaLiKiz.exe executable will be created in the src directory. Note that you must be
logged into cephee15 or cephee16 in order to compile!

\section{Setting up a new run}
Go into a MATLAB environment. From the main QuaLiKiz directory first run the script newrun.m. When prompted, type in the name of your new run, 
e.g. 'run10\_ILOVEFUSION'. This directory will be created in the 'runs' directory. If this directory does not already exist it will be created. 

You will now find yourself in this directory, together with a bunch of m-files copied from the 'tools' directory. These m-files will be needed to create a new QLK run as described
below and will be introduced where relevant in the following sections.

\subsection{Setting up a new scan}

A template input file - parameters.m - has been copied to the working directory. All the external parameters needed for a QLK scan can be found and modified here.In general, 2D scans are carried 
out. One dimension is ktheta, while all other variables (e.g. magnetic shear, R/LTi) are of size scann (size of the second dimension) and can be either constant in that dimension, or varying if 
that parameter is the subject of the scan. ktheta\_min, ktheta\_max, size of the ktheta grid, and the value of scann are all variables in the parameter file. In the default parameters.m example,
the magnetic shear is the subject of the parameter scan.

Note that a 1D run is also possible! Just set scann=1 and then a $k_\theta$ spectrum for only one set of parameters will be calculated.

Now, once satisfied with the input file parameters, type in the command input\_QLK\_scan (from inside the MATLAB environment). This will create - in the run directory - a link to the QuaLiKiz executable
, create a batch.pbs file for launching the run on the Cephee cluster, and create QuaLikiz input files inside the /input directory, based on the settings in the parameter.m file. You will also be prompted to type 
in the name of your job which will run on the cluster. This is convenient to distinguish between runs as seen using the qstat command (or !qstat from within the MATLAB environment). 
For example, one can type 'run10' for the batch job name. Plots of the various input variables are displayed to visually examine some of the parameters for error checking.

To then actually launch the run (from within the MATLAB environment), just type '!qsub batch.pbs' from within the new run directory. Your run is now being cooked.
You can also launch the run from outside the MATLAB environment, with 'qsub batch.pbs'. Also, you can launch the run interactively (i.e. to be run on the front-end node). For an interactive run with one processor, type './QuaLiKiz.exe'. 
For an interactive run with parallel execution, type 'mpirun -np 8 QuaLikiz.exe', for example for 8 processors. Include an exclamation mark (!) before the above commands, if you are in a MATLAB environment.

\subsection{Setting up a new CRONOS based run}

For a CRONOS based run, the following steps need to be carried out to set up a QLK run.

1. A CRONOS file needs to be loaded in the background, i.e. the CRONOS data and param files. In the new run directory, the function getcrondat.m can be found. This is used to then save the
relevant data for QLK directly from the CRONOS file. This function is called by typing 'getcrondat(data,param,nshot);' from within the MATLAB environment. nshot should be a shot number,
used for bookeeping purposes. The user will be prompted to provide the time window desired for profile averaging, e.g. [45 45.5]. A single time slice can also be used by inputting the same time in both field, e.g. [45 45]. A matlab .mat data file is then saved in the run directory with the CRONOS data. The shot number appends the matfile name.

2. Make sure that the contents of the just made crondat\#\#\#\#\#.mat file is loaded in the MATLAB workspace. A crondat structure should then exist in the MATLAB workspace. Then, run the script 'make\_CRONOS\_parameterfile'. The user will be prompted for
some basic info for the run (e.g. ktheta grid), and based on the crondat structure a parameters.m file will be made based on the CRONOS run parameters. 

3. Run the script input\_QLK\_scan. This will then, as above, prepare the ground for the QLK simulation. !qsub batch.pbs will launch the run, or it can be launched interactively. 
The parameters.m file can be modified by hand before each call to input\_QLK\_CRONOS, in case input parameters are desired to be changed.

\section{Reading the QuaLiKiz output}

All the output is written in the /output directory, as ASCII files. /output/primitive contains more 'primitive' QuaLiKiz output (quasilinear integrations, modewidths, etc.) which are used by the saturation rule to generate the final
output (fluxes) in the /output directory. Growth rates and frequencies are also in the /output directory.

At the moment there is no automated plotting tool to view the results. However, since it's ASCII, it's very easy to write your own plotting scripts. 

The main output is the following:
\begin{description} 
\item[gam\_GB] are the growth rates in gyrobohm units (normalized to $\sqrt{Te/mi}/a$)

\item[gam\_SI] are the growth rates in angular frequency ($s^-1$)

\item[ome\_GB] are the frequencies in gyrobohm units. Negative values are in the ion diamagnetic direction (e.g. ITG), positive are in the electron direction (e.g. TEM).

\item[ome\_SI] are the frequencies in angular frequency ($s^-1$)
\end{description} 

The growth rate and frequency matrices are organized as follows: the columns correspond to wavenumbers, the rows to the scan number (typically corresponding to radius). 
This repeats itself for the total number of solutions saught for (default numsols=3).

\begin{description} 
\item[ief\_GB] is the ion heat conductivity, $\chi_i$, in gyrobohm units: (normalized to $\sqrt(mi)T_e^{1.5}/(q_e^2B^2a)$)

\item[ief\_SI] is the ion heat flux in SI units ($W/m^2$)

\item[eef\_GB] is the electron heat conductivity, $\chi_e$, in gyrobohm units: (normalized to $\sqrt(mi)T_e^{1.5}/(q_e^2B^2a)$)

\item[eef\_SI] is the electron heat flux in SI units ($W/m^2$)

\item[ipf\_GB] is the total ion particle diffusivity in gyrobohm units (assuming only diagonal transport)

\item[ipf\_SI] is the total ion particle flux in SI 

\item[epf\_GB] is the total electron particle diffusivity in gyrobohm units (assuming only diagonal transport)

\item[epf\_SI] is the total electron particle flux in SI 

\item[dfe\_SI] electron diffusivity (the term proportional to $dn/dr$) in SI units

\item[vte\_SI] the electron particle thermopinch in SI units

\item[vce\_SI] the electron particle compressibility pinch in SI units

\item[dfi\_SI] ion diffusivity (the term proportional to $dn/dr$) in SI units

\item[vti\_SI] the ion particle thermopinch in SI units

\item[vci\_SI] the ion particle compressibility pinch in SI units
\end{description} 

Note that all the ion arrays above are organized as follows: the columns correspond to the different ions, the rows to the scan number (typically radius).


\section{General notes}
When running the code, please do not be alarmed if there are some errors reported in the output stream with regard to the integration. QuaLiKiz carries out thousands and thousands of such integrations during the
computation, and some do not converge. However, generally, this does not perturb too much the final result. 

When running on a restricted number of points in a stand-alone fashion, it may be advantageous to carry out convergence tests on the results by increasing the integration accuracy inputs. This is relacc1 and relacc2 in
the input parameter file. Results are slower but more accurate with higher relacc1 and relacc2. Generally, there is no point raising them by more than 2 orders of magnitude from their default values. It is recommended to
raise them by the same factor each time, and also to increase maxpts (maximum number of integrand evaluations carried out) by the same factor each time.

It is recommended to run the code in parallel. One cephee node has 8 processors, so this is a recommended number to use. Reminder: an interactive run can be carried out with 'mpirun -np 8 QuaLiKiz.exe'. This is a
convenient way to run the code for standalone applications.

Finally, the code is still evolving (although almost converged now), and this manual is far from complete. Hopefully what is written here is sufficient to get started. For more detailed question please write us above.

Happy computing!

%The output\_QLK\_scan.m file is used to extract the QuaLiKiz output. The script simply needs to be called from within the desired run directory. Various graphs are automatically generated: 
%3D plot of the dominant branch growth rates throughout the 2D scan, plots of the input parameters, growth rate spectrums (option is given for more than one iteration of growth rate spectrum plot),
%and flux spectrums. If the plotting of these graphs are not desired, various printout flags can be toggled on or off towards the beginning of the m-file. 

%The user is also prompted to provide the name of the main variable being scanned (needed for writing the scan variable in the output, and for displaying the graphs). For example, if the magnetic shear is being scanned, 
%then 'smag' should be inputted when prompted. If scann=1 (i.e. there is no parameter scan in a given run), then hitting enter (and allowing for the default 'ATi' value) is sufficient, since it 
%doesn't actually matter what value is given in this case. For CRONOS based QLK runs with varying radius, then 'x' should be inputted.

%All output data is saved in the QLK\_output MATLAB structure. This structure contains the fluxes, the growth rates of all 5 branches (both in $s^{-1}$ and GyroBohm units), $k_\theta\rho_s$, and 
%the parameter being scanned.

%\section{Test cases}
%For comparison with future versions, a number of test cases have been set up in the testcases/ directory. These include magnetic shear scans around the GA-standard case, Case C from the low magnetic shear paper soon to be submitted to Phys. Plasmas, and a TEM case (GA-standard with R/LTi=0). Cases both with and without collisions can be carried out. Directories which include the parameter files of these cases are in testcases/ and have been labelled case1 to case6. Results from the various revisions can be collected in the testcases/ directory, in MATLAB .mat files. At the moment, the results of the revision 1 version of QuaLiKiz are in the revision1\_testcases.mat data file. These result consist of the various QLK\_output MATLAB structures, renamed here (in order to avoid writing over any new data in the workspace) as case1rev1 to case6rev1.


\end{document}
